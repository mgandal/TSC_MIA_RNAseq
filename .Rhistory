charmatch("_",as.character(neel$Sample_ID))
charmatch('_',as.character(neel$Sample_ID))
charmatch('_',as.character(neel$Sample_ID[1]))
neel$Sample_ID
as.character(neel$Sample_ID)
charmatch(as.character(neel$Sample_ID),"_")
charmatch(as.character(neel$Sample_ID),'_')
charmatch(as.character(neel$Sample_ID),as.character("_"))
charmatch(as.character("_"),as.character(neel$Sample_ID))
charmatch(as.character("_"),as.character(neel$Sample_ID)[1])
pmatch(as.character("_"),as.character(neel$Sample_ID)[1])
?pmatch
pmatch(as.character(neel$Sample_ID), d$AN03935)
View(d)
match(as.character(neel$Sample_ID), d$AN03935)
grep(as.character(neel$Sample_ID), d$AN03935)
grep(as.character(neel$Sample_ID)[1], d$AN03935)
d = read.csv("~/Desktop/rows.csv",head=F)
View(d)
View(d)
neel.sa
neel$Sample_ID = as.character(neel$Sample_ID)
strsplit(neel$Sample_ID,"_")
strsplit(neel$Sample_ID,"_")[1,]
strsplit(neel$Sample_ID,"_")[1]
as.matrix(strsplit(neel$Sample_ID,"_"))
(strsplit(neel$Sample_ID,"_"))
?strsplit
neel = read.csv("~/Desktop/ASD_RNAseq_metadata.csv")
View(neel)
options(stringsAsFactors = F)
neel = read.csv("~/Desktop/ASD_RNAseq_metadata.csv")
n_m = matrix(NA, nrow = length(unique(neel$BrainID)),col=3)
n_m = matrix(NA, nrow = length(unique(neel$BrainID)),ncol=3)
rownames(n_m)=unique(neel$BrainID)
colnames(n_m)=c("ba9, ba41-42-22","vermis")
colnames(n_m)=c("ba9, "ba41-42-22","vermis")
colnames(n_m)=c("ba9", "ba41-42-22","vermis")
View(n_m)
for (i in 1:263) {
x = neel$BrainID[i]
y = neel$RegionID[i]
if(neel$Neel.Seq.Anno[i]=="include") n_m[x,y]=neel$RIN[i]
}
View(n_m)
n_m(is.na(n_m))=""
n_m[is.na(n_m)]=""
View(m)
View(n_m)
View(d)
idx = match(rownames(n_m), d$V1)
d2 = d
idx = match(d$V1, rownames(n_m))
d = cbind(d, n_m[idx,])
View(d)
write.csv(file="~/Desktop/d.csv",d)
?sample
indA = 1:100
indC = 1:100
indC = 101:200
autInd = sample(indA, length(indA), replace=T)
autInd = sample(indA, length(indA), replace=F)
length(unique(indA))
length(unique(autInd))
autInd = sample(indA, length(indA), replace=T)
length(unique(autInd))
probes = read.csv("~/Desktop/HumanMethylation450_15017482_v1-2.csv")
rm(list=ls())
probes = read.csv("/Volumes/Seagate Bac/450K_asd_anno.csv")
View(probes)
table(probes$Regulatory_Feature_Group)
library(biomaRt)
mart = useMart(host="feb2014.archive.ensembl.org")
mart = useMart(biomart = "ensembl", host="feb2014.archive.ensembl.org")
listMarts(host="feb2014.archive.ensembl.org")
mart = useMart(biomart = "ENSEMBL_MART_ENSEMBL", host="feb2014.archive.ensembl.org")
listDatasets(mart)
mart = useMart(biomart = "ENSEMBL_MART_ENSEMBL", dataset = "hspaniens_gene_ensembl", host="feb2014.archive.ensembl.org")
mart = useMart(biomart = "ENSEMBL_MART_ENSEMBL", dataset = "hsapiens_gene_ensembl", host="feb2014.archive.ensembl.org")
f = listFilters(mart)
a = listAttributes(mart)
View(f)
View(probes)
probes$loc = paste(probes$CHR, probes$MAPINFO, probes$MAPINFO,probes$Strand,sep=":")
probes$loc[1:10]
gsub("F","1",probes$loc)
probes$loc = gsub("F","1",probes$loc)
probes$loc = gsub("R","-1",probes$loc)
probes$loc[1:10]
View(a)
View(f)
View(f)
f[grep("name",f$description),]
View(a)
View(a)
bm = getBM(filters = "external_gene_id",
attributes = c("external_gene_id", "ensembl_gene_id",
mart = mart)
dsfadf
3
bm = getBM(filters = "external_gene_id",
attributes = c("external_gene_id", "ensembl_gene_id"),
values = "AFAP1-AS1",
mart = mart)
f[grep("name",f$description),]
View(f)
bm = getBM(filters = "hgnc_symbol",
attributes = c("external_gene_id", "ensembl_gene_id"),
values = "AFAP1-AS1",
mart = mart)
View(bm)
bm = getBM(filters = "hgnc_symbol",
attributes = c("external_gene_id", "ensembl_gene_id"),
values = probes$Closest_TSS_gene_name,
mart = mart)
View(bm)
idx = match(probes$Closest_TSS_gene_name, bm$external_gene_id)
idx[1:10]
probes$ensg = bm$ensembl_gene_id[idx]
View(probes)
write.csv(probes, file="/Volumes/Seagate Bac/450K_asd_anno_ensg.csv")
library(biomaRt)
M2 = read.csv("~/Desktop/M2.csv")
mart = useMart(biomart = "ENSEMBL_MART_ENSEMBL", dataset = "hsapiens_gene_ensembl", host="feb2014.archive.ensembl.org")
f = listFilters(mart)
a = listAttributes(mart)
View(a)
bm = getBM(filters = "ensembl_gene_id",
attributes = c("ensembl_gene_id","description"),
values = M2$ENSEMBL.GENE.ID,
mart = mart)
idx = match(M2$ENSEMBL.GENE.ID, bm$ensembl_gene_id)
M2$description = bm$ensembl_gene_id[idx]
write.csv(M2, file="~/Desktop/M2_2.csv")
View(bm)
M2$description = bm$description[idx]
write.csv(M2, file="~/Desktop/M2_2.csv")
View(a)
a[grep("PFAM",a$description),]
bm = getBM(filters = "ensembl_gene_id",
attributes = c("ensembl_gene_id","description","pfam"),
values = M2$ENSEMBL.GENE.ID,
mart = mart)
idx = match(M2$ENSEMBL.GENE.ID, bm$ensembl_gene_id)
M2$description = bm$description[idx]
M2$PFAM_ID = bm$pfam[idx]
write.csv(M2, file="~/Desktop/M2_2.csv")
which(M2$Gene.Symbol=="SRRM4")
M2[38,]
install.packages("~/Desktop/R_peer_source_1.3.tgz", repos = NULL)
source("http://biostat.jhsph.edu/~jleek/code/twitterMap.R")
twitterMap("simplystats")
source("http://biostat.jhsph.edu/~jleek/code/twitterMap.R")
twitterMap("simplystats")
twitterMap("simplystats",userLocation="Baltimore")
install.packages(c("devtools", "rjson", "bit64", "httr"))
install.packages(c("devtools", "rjson", "bit64", "httr"))
library(devtools)
install_github("twitteR", username="geoffjentry")
library(twitteR)
twitterMap("simplystats",userLocation="Baltimore")
reqURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "http://api.twitter.com/oauth/access_token"
authURL <- "http://api.twitter.com/oauth/authorize"
consumerKey <- "yourconsumerkey"
consumerSecret <- "yourconsumersecret"
twitCred <- OAuthFactory$new(consumerKey=consumerKey,consumerSecret=consumerSecret,requestURL=reqURL,accessURL=accessURL,authURL=authURL)
download.file(url="http://curl.haxx.se/ca/cacert.pem", destfile="cacert.pem")
twitCred$handshake(cainfo="cacert.pem")
registerTwitterOAuth(twitCred)
consumerKey="0L5Fs3WjHfvi2flBKfMau7lCW"
consumerSecret="sbukFbJp4D8X97LAsFbq1LRCTsW1zC0fIgauCFuzg17SODNSKy"
twitCred <- OAuthFactory$new(consumerKey=consumerKey,consumerSecret=consumerSecret,requestURL=reqURL,accessURL=accessURL,authURL=authURL)
twitCred <- OAuthFactory$new(consumerKey=consumerKey,consumerSecret=consumerSecret,requestURL=reqURL,accessURL=accessURL,authURL=authURL)
library(twitteR)
twitCred <- OAuthFactory$new(consumerKey=consumerKey,consumerSecret=consumerSecret,requestURL=reqURL,accessURL=accessURL,authURL=authURL)
?OAuthFactor
?OAuthFactory
??OAuthFactory
??OAuthFactory
?setup_twitter_oauth
setup_twitter_oauth(consumerKey, consumerSecret, "389432277-wUnxOuh2H7IhNBiF5sAEdG803HAtSB1vf8M51VXi", "fNQqG1kwKexAIIQYKeXombhay03pNbIpt6425Ojb9YreN")
twitterMap("simplystats",userLocation="Baltimore")
twitterMap("simplystats")
data(world.cities)
#      grep("Baltimore",world.cities[,1])
data(world.cities)
source("http://biostat.jhsph.edu/~jleek/code/twitterMap.R")
data(world.cities)
twitterMap("simplystats")
twitterMap("simplystats")
twitterMap("mikejg84")
twitterMap("mikejg84", userLocation = "Los Angeles")
twitterMap("mikejg84", userLocation = "Los Angeles", plotType="both")
dev.off()
dev.off()
twitterMap("mikejg84", userLocation = "Los Angeles", plotType="both")
twitterMap("mikejg84", userLocation = "Los Angeles", plotType="both")
pdf("~/Desktop/twitter.pdf")
twitterMap("mikejg84", userLocation = "Los Angeles", plotType="both")
dev.off()
dev.off()
##Psychiatric-Venn-Diagram.R
install.packages("venneuler")
library(venneuler)
dat = read.csv("http://www.nature.com/ng/journal/v47/n11/extref/ng.3406-S2.csv")
traits = c("ADHD", "Alzheimer's", "Anorexia", "Autism Spectrum", "Bipolar", "Depression", "Schizophrenia", "Ever/Never Smoked")
idx = which((dat$Trait1 %in% traits) & (dat$Trait2 %in% traits))
dat = dat[idx,]
dat$Trait1 = gsub("Alzheimer's", "AD", dat$Trait1)
dat$Trait1 = gsub("Bipolar", "BD", dat$Trait1)
dat$Trait1 = gsub("Depression", "MDD", dat$Trait1)
dat$Trait1 = gsub("Schizophrenia", "SCZ", dat$Trait1)
dat$Trait1 = gsub("Autism Spectrum", "ASD", dat$Trait1)
dat$Trait1 = gsub("Anorexia", "AN", dat$Trait1)
dat$Trait1 = gsub("Ever/Never Smoked", "NIC", dat$Trait1)
dat$Trait2 = gsub("Alzheimer's", "AD", dat$Trait2)
dat$Trait2 = gsub("Bipolar", "BD", dat$Trait2)
dat$Trait2 = gsub("Depression", "MDD", dat$Trait2)
dat$Trait2 = gsub("Schizophrenia", "SCZ", dat$Trait2)
dat$Trait2 = gsub("Autism Spectrum", "ASD", dat$Trait2)
dat$Trait2 = gsub("Anorexia", "AN", dat$Trait2)
dat$Trait2 = gsub("Ever/Never Smoked", "NIC", dat$Trait2)
View(dat)
?getFiles
library(basespaceR)
library(BaseSpaceR)
?getFiles
install.packages("addinslist"))
install.packages("addinslist")
source("http://bioconductor.org/biocLite.R")
rm(list=ls())
options(stringsAsFactors = F)
rm(list=ls())
options(stringsAsFactors = F)
source("http://bioconductor.org/biocLite.R")
biocLite("biomaRt")
source("~/GeschwindLab/R_scripts/fisher_overlap.R")
dnlof = read.delim("./data/de_novo_lof_genes.txt",head=F)
dnmis = read.delim("./data/de_novo_mis_genes.txt",head=F)
casectl =read.delim("./data/case_control_genes.txt",head=T)
## Load neurodevelopmental gene modules from
rm(list=ls())
options(stringsAsFactors = F)
library(biomaRt); library(reshape)
source("~/GeschwindLab/R_scripts/fisher_overlap.R")
dnlof = read.delim("./data/de_novo_lof_genes.txt",head=F)
dnmis = read.delim("./data/de_novo_mis_genes.txt",head=F)
rm(list=ls())
dat = read.csv("~/Desktop/ASD3region/Combined.csv")
View(dat)
library(ggplot2)
View(dat)
ggplot(dat,aes(x=Module,y=Enrichment,color=Study)) + geom_bar()
ggplot(dat,aes(x=Module,y=Enrichment,color=Study)) + geom_bar(stat="identity")
ggplot(dat,aes(x=Module,y=Enrichment,color=Study, fill=Study)) + geom_bar(stat="identity")
ggplot(dat,aes(x=Module,y=Enrichment,color=Study, fill=Study)) + geom_bar(stat="identity", position = position_dodge())
head(Dat)
head(da)
head(dat)
ggplot(dat,aes(x=Module,y=Enrichment,color=Study, fill=Study)) +
geom_bar(stat="identity", position = position_dodge()) +
geom_errorbar(aes(ymin=(Enrichment - Enrichment_std_error), ymax=(Enrichment + Enrichment_std_error)), position=position_dodge(width=0.8), width=0.25,size=0.25) +
geom_errorbar(aes(ymin=(Enrichment - Enrichment_std_error), ymax=(Enrichment + Enrichment_std_error)), position=position_dodge(width=0.8), width=0.25,size=0.25) +
ggplot(dat,aes(x=Module,y=Enrichment,color=Study, fill=Study)) +
library(ggplot2)
ggplot(dat,aes(x=Module,y=Enrichment,color=Study, fill=Study)) +
geom_bar(stat="identity", position = position_dodge()) +
geom_errorbar(aes(ymin=(Enrichment - Enrichment_std_error), ymax=(Enrichment + Enrichment_std_error)), position=position_dodge(width=0.8), width=0.25,size=0.25)
ggplot(dat,aes(x=Module,y=Enrichment,color=Study)) +
geom_bar(stat="identity", position = position_dodge()) +
geom_errorbar(aes(ymin=(Enrichment - Enrichment_std_error), ymax=(Enrichment + Enrichment_std_error)), position=position_dodge(width=0.8), width=0.25,size=0.25)
geom_errorbar(aes(ymin=(Enrichment - Enrichment_std_error), ymax=(Enrichment + Enrichment_std_error)), position=position_dodge(width=0.8), width=0.25,size=0.25)
ggplot(dat,aes(x=Module,y=Enrichment,fill=Study)) +
geom_bar(stat="identity", position = position_dodge()) +
geom_errorbar(aes(ymin=(Enrichment - Enrichment_std_error), ymax=(Enrichment + Enrichment_std_error)), position=position_dodge(width=0.8), width=0.25,size=0.25)
ggplot(dat,aes(x=Module,y=Enrichment,fill=Study)) +
geom_bar(stat="identity", position = position_dodge()) +
geom_errorbar(aes(ymin=(Enrichment - Enrichment_std_error), ymax=(Enrichment + Enrichment_std_error)), position=position_dodge(width=0.8), width=0.25,size=0.25) +
theme(axis.text.x=element_text(angle=50, size=10, hjust=1))
ggplot(dat,aes(x=Module,y=Enrichment,fill=Study)) +
geom_bar(stat="identity", position = position_dodge()) +
geom_errorbar(aes(ymin=(Enrichment - Enrichment_std_error), ymax=(Enrichment + Enrichment_std_error)), position=position_dodge(width=0.8), width=0.25,size=0.25) +
theme(axis.text.x=element_text(angle=50, size=12, hjust=1))
strsplit(dat$Module,"[.]")
?strsplit
options(stringsAsFactors = F)
dat= read.csv("~/Desktop/ASD3region/Combined.csv")
strsplit(dat$Module,"[.]")
unlist(strsplit(dat$Module,"[.]"))
unlist(strsplit(dat$Module,"[.]"))[seq(1,149,by=2)]
order(unlist(strsplit(dat$Module,"[.]"))[seq(1,149,by=2)])
order(as.numeric(unlist(strsplit(dat$Module,"[.]"))[seq(1,149,by=2)]))
dat = dat[order(as.numeric(unlist(strsplit(dat$Module,"[.]"))[seq(1,149,by=2)])),]
library(ggplot2)
ggplot(dat,aes(x=Module,y=Enrichment,fill=Study)) +
geom_bar(stat="identity", position = position_dodge()) +
geom_errorbar(aes(ymin=(Enrichment - Enrichment_std_error), ymax=(Enrichment + Enrichment_std_error)), position=position_dodge(width=0.8), width=0.25,size=0.25) +
theme(axis.text.x=element_text(angle=50, size=12, hjust=1))
dat
dat$Module
dat$Module= factor(dat$Module)
dat$Module
options(stringsAsFactors = F)
dat= read.csv("~/Desktop/ASD3region/Combined.csv")
dat = dat[order(as.numeric(unlist(strsplit(dat$Module,"[.]"))[seq(1,149,by=2)])),]
dat
unique(dat$Module)
dat$Module= factor(dat$Module, levels=unique(dat$Module))
library(ggplot2)
ggplot(dat,aes(x=Module,y=Enrichment,fill=Study)) +
geom_bar(stat="identity", position = position_dodge()) +
geom_errorbar(aes(ymin=(Enrichment - Enrichment_std_error), ymax=(Enrichment + Enrichment_std_error)), position=position_dodge(width=0.8), width=0.25,size=0.25) +
theme(axis.text.x=element_text(angle=50, size=12, hjust=1))
ggplot(dat,aes(x=Module,y=Enrichment,fill=Study)) +
geom_bar(stat="identity", position = position_dodge()) +
geom_errorbar(aes(ymin=(Enrichment - Enrichment_std_error), ymax=(Enrichment + Enrichment_std_error)), position=position_dodge(width=0.8), width=0.25,size=0.25) +
theme(axis.text.x=element_text(angle=50, size=12, hjust=1)) + ylab("")
ggplot(dat,aes(x=Module,y=Enrichment,fill=Study)) +
geom_bar(stat="identity", position = position_dodge()) +
geom_errorbar(aes(ymin=(Enrichment - Enrichment_std_error), ymax=(Enrichment + Enrichment_std_error)), position=position_dodge(width=0.8), width=0.25,size=0.25) +
theme(axis.text.x=element_text(angle=50, size=12, hjust=1)) + xlab("") + ggtitle("LDScore Partitioned Heritability")
ggplot(dat,aes(x=Module,y=Enrichment,fill=Study)) +
geom_bar(stat="identity", position = position_dodge()) +
geom_errorbar(aes(ymin=(Enrichment - Enrichment_std_error), ymax=(Enrichment + Enrichment_std_error)), position=position_dodge(), width=0.25,size=0.25) +
theme(axis.text.x=element_text(angle=50, size=12, hjust=1)) + xlab("") + ggtitle("LDScore Partitioned Heritability")
geom_bar(stat="identity", position = position_dodge()) +
geom_errorbar(aes(ymin=(Enrichment - Enrichment_std_error), ymax=(Enrichment + Enrichment_std_error)), position=position_dodge(width=1), width=0.25,size=0.25) +
theme(axis.text.x=element_text(angle=50, size=12, hjust=1)) + xlab("") + ggtitle("LDScore Partitioned Heritability")
ggplot(dat,aes(x=Module,y=Enrichment,fill=Study)) +
geom_bar(stat="identity", position = position_dodge()) +
geom_errorbar(aes(ymin=(Enrichment - Enrichment_std_error), ymax=(Enrichment + Enrichment_std_error)), position=position_dodge(width=1), width=0.25,size=0.25) +
theme(axis.text.x=element_text(angle=50, size=12, hjust=1)) + xlab("") + ggtitle("LDScore Partitioned Heritability")
ggplot(dat,aes(x=Module,y=Enrichment,fill=Study)) +
geom_bar(stat="identity", position = position_dodge()) +
geom_errorbar(aes(ymin=(Enrichment - Enrichment_std_error), ymax=(Enrichment + Enrichment_std_error)), position=position_dodge(width=.9), width=0.25,size=0.25) +
theme(axis.text.x=element_text(angle=50, size=12, hjust=1)) + xlab("") + ggtitle("LDScore Partitioned Heritability")
rm(list=ls())
library(synapseClient)
source('http://depot.sagebase.org/CRAN.R'); pkgInstall("synapseClient")
library(synapseClient)
s = synapseLogin("mgandal", "cali4nia",rememberMe = T)
s = synapseLogin("mgandal", "cal!4nia",rememberMe = T)
s = synapseLogin("mgandal", "mike0818!,rememberMe = T)
s = synapseLogin("mgandal", "mike0818!",rememberMe = T)
s = synapseLogin("mgandal", "mike0818!",rememberMe = T)
id = synapseQuery('SELECT id, name FROM entity WHERE parentId=="syn4597386"')
id = synapseQuery('SELECT id, name FROM entity WHERE parentId=="syn4587616"')
View(id)
View(id)
id = synapseQuery('SELECT id, name FROM entity WHERE parentId=="syn4597386"')
View(id)
chip = synapseQuery('SELECT id, name FROM entity WHERE parentId=="syn4597386"')
rnaseq = synapseQuery('SELECT id, name FROM entity WHERE parentId=="syn4587615"')
mirna = synapseQuery('SELECT id, name FROM entity WHERE parentId=="syn6133183"')
View(chip)
chip$Region = "PFC"
chip$Region[grep("_C_ChIP", chip$entity.id)] = "CBL"
chip$Region[grep("_TC_ChIP", chip$entity.id)] = "Temporal"
options(stringsAsFactors = F)
chip$entity.id[1]
chip$Region[grep("_C_ChIP", chip$entity.name)] = "CBL"
chip$Region[grep("_TC_ChIP", chip$entity.name)] = "Temporal"
chip$Subject = gsub("PEC_ASD_GIS_C_ChIPseq_H3K27ac_HiSeq2000_", "", chip$entity.name)
chip$Subject = gsub("PEC_ASD_GIS_TC_ChIPseq_H3K27ac_HiSeq2000_", "", chip$Subject)
chip$Subject = gsub("PEC_ASD_GIS_PFC_ChIPseq_H3K27ac_HiSeq2000_", "", chip$Subject)
strsplit(chip$Subject,"_")
unlist(strsplit(chip$Subject,"_"))
unlist(strsplit(chip$Subject,"_"))[seq(1,600,by=2)]
unlist(strsplit(chip$Subject,"_"))[seq(1,590,by=2)]
unlist(strsplit(chip$Subject,"_"))[seq(1,580,by=2)]
unlist(strsplit(chip$Subject,"_"))[seq(1,570,by=2)]
unlist(strsplit(chip$Subject,"_"))[seq(1,572,by=2)]
unlist(strsplit(chip$Subject,"_"))[seq(1,571,by=2)]
unlist(strsplit(chip$Subject,"_"))[seq(1,570,by=2)]
chip$Subject=unlist(strsplit(chip$Subject,"_"))[seq(1,570,by=2)]
chip
View(rnaseq)
rnaseq$Region = "PFC"
rnaseq$Regionp[grep("Vermis", rnaseq$entity.name)] = "CBL"
rnaseq$Regionp[grep("vermis", rnaseq$entity.name)] = "CBL"
rnaseq$Region[grep("vermis", rnaseq$entity.name)] = "CBL"
rnaseq$Region[grep("ba41", rnaseq$entity.name)] = "Temporal"
rnaseq$Subject = gsub("PEC_ASD_UCLA_C_mRNA_HiSeq2000_", "", rnaseq$entity.name)
rnaseq$Subject = gsub("PEC_ASD_UCLA_PFC_mRNA_HiSeq2000_", "", gsub("PEC_ASD_UCLA_C_mRNA_HiSeq2000_", "", rnaseq$entity.name))
rnaseq$Subject = gsub("EC_ASD_UCLA_TC_mRNA_HiSeq2000_", gsub("PEC_ASD_UCLA_PFC_mRNA_HiSeq2000_", "", gsub("PEC_ASD_UCLA_C_mRNA_HiSeq2000_", "", rnaseq$entity.name)))
rnaseq$Subject = gsub("PEC_ASD_UCLA_TC_mRNA_HiSeq2000_", "", gsub("PEC_ASD_UCLA_PFC_mRNA_HiSeq2000_", "", gsub("PEC_ASD_UCLA_C_mRNA_HiSeq2000_", "", rnaseq$entity.name)))
unlist(strsplit(rnaseq$Subject, "_"))
unlist(strsplit(rnaseq$Subject, "_"))[seq(1,1750,by=3)]
u=unlist(strsplit(rnaseq$Subject, "_"))
u
u = u[grepl("UMB", u) | grepl("AN",u)]
u
rnaseq$Subject = u
View(rnaseq)
View(mirna)
mirna$Region = "Temporal"
mirna$Region[grep("vermis", mirna$entity.name)] = "CBL"
View(mirna)
mirna$Region[grep("ba9", mirna$entity.name)] = "PFC"
View(mirna)
u = unlist(strsplit(mirna$entity.name, "_"))
u =u
u
u = u[grepl("UMB", u) | grepl("A",u)]
u = unlist(strsplit(mirna$entity.name, "_"))
u = u[grepl("UMB", u) | grepl("A",u) | grepl("N",u)]
u
View(chip)
mirna$Subject = u
meta.chip =  synGet(id='syn5602931', load=T)
meta.chip =  synGet(id='syn5602931')
data.frame(meta.chip)
meta.chip =  synGet(id='syn5602931',load = TRUE)
syn5602932 <- synGet(id='syn5602932', load=T)
syn5602932 <- synGet(id='syn5602932')
syn5602932$properties
syn5602932$synapseWebUrl
syn5602932$synapseWebUrl
syn5602932 <- synGet(id='syn5602932', load=T,version = 3)
syn5602932 <- synGet(id='syn5602932', load=T,version = 2)
syn5602932 <- synGet(id='syn5602932', load=T,version = 1)
syn5602932 <- synGet(id='syn5602932', load=T,version = 1,downloadFile = T)
syn5602932 <- synGet(id='syn5602932', load=T,version = 2,downloadFile = T)
syn5602932 <- synGet(id='syn5602932', load=T,version = 3,downloadFile = T)
syn5602932 <- synGet(id='syn5602932', load=T,version = 4,downloadFile = T)
meta = synapseQuery('SELECT * FROM entity WHERE parentId=="syn5602932"')
meta = synapseQuery('SELECT id,name FROM entity WHERE parentId=="syn5602932"')
meta = synapseQuery('SELECT id,name FROM entity WHERE parentId=="syn5602932"')
meta = read.csv("~/Downloads/UCLA_R01MH094714_ASD_Metadata_Clinical_August2016Release.csv")
View(meta)
meta$RNAseq=""
idx = match(rnaseq$Subject, meta$Individual_ID)
meta$RNAseq[idx] = TRUE
View(meta)
meta$miRNA = ""
idx = match(miRNA$Subject, meta$Individual_ID)
idx = match(mirna$Subject, meta$Individual_ID)
idx
meta$miRNA[idx] = TRUE
meta$ChIPseq= ""
idx = match(chip$Subject, meta$Individual_ID)
idx = match(chip$Subject, meta$Individual_ID)
meta$ChIPseq[idx] = TRUE
View(meta)
View(rnaseq)
write.csv(file="~/Desktop/UCLA_ASD_samples.csv", meta)
rm(list=ls())
source('http://depot.sagebase.org/CRAN.R'); pkgInstall("synapseClient")
library(synapseClient)
s = synapseLogin("mgandal", "mike0818!",rememberMe = T)
install.packages(package, repos = c(sageRepo, "http://cran.r-project.org"),
)
source('http://depot.sagebase.org/CRAN.R'); pkgInstall("synapseClient")
library(synapseClient)
s = synapseLogin("mgandal", "mike0818!",rememberMe = T)
gvex = synapseQuery('SELECT id, name FROM entity WHERE parentId=="syn3270015"')
View(gvex)
gvex = synapseQuery('SELECT id, name FROM entity WHERE parentId=="syn7062403"')
gvex = synapseQuery('SELECT * FROM entity WHERE parentId=="syn7062403"')
View(gvex)
table(gvex$entity.tissueType)
table(gvex$entity.disease)
yaleASD = synapseQuery('SELECT * FROM entity WHERE parentId=="syn7067068"')
View(yaleASD)
cmc = synapseQuery('SELECT * FROM entity WHERE parentId=="syn3275214"')
View(cmc)
cmc = synapseQuery('SELECT * FROM entity WHERE parentId=="syn4923029"')
cmc = synapseQuery('SELECT * FROM entity WHERE parentId=="syn4645130"')
cmc = synapseQuery('SELECT name,ID FROM entity WHERE parentId=="syn4645130"')
cmc = synapseQuery('SELECT name FROM entity WHERE parentId=="syn4645130"')
cmc = synapseQuery('SELECT ID FROM entity WHERE parentId=="syn4645130"')
yaleASD
table(yaleASD$entity.tissueType)
table(yaleASD$entity.disease)
table(yaleASD$entity.disease[yaleASD$entity.tissueType=="Dorsolateral Prefrontal Cortex"])
rnaseq = synapseQuery('SELECT id, name FROM entity WHERE parentId=="syn4587615"')
View(rnaseq)
rnaseq[1:6,]
506/2
rm(list=ls())
options(stringsAsFactors = F)
rm(list=ls())
source("http://bioconductor.org/biocLite.R")
biocLite(c("DESeq2", "CQN"))
install.package("limma")
install.packages("limma")
biocLite("limma")
setwd("/Users/mgandal/Documents/Github/TSC_MIA_RNAseq")
load("./data/HTseqCounts.RData")
View(datExpr)
View(datMeta)
datMeta$Group = "TSC+/-"
datMeta$Group[datMeta$Subject %in% c(442,466,469)] = "WT"
View(datMeta)
datMeta$Treatment = "PolyIC"
datMeta$Treatment[datMeta$Subject %in% c(420, 455, 447)] = "Saline"
View(datMeta)
datMeta$Genotype = "TSC+/-"
datMeta$Genotype[datMeta$Subject %in% c(442,466,469)] = "WT"
datMeta$Treatment = "PolyIC"
datMeta$Treatment[datMeta$Subject %in% c(420, 455, 447)] = "Saline"
datMeta$Group = as.factor(paste(datMeta$Genotype, "_", datMeta$Treatment))
table(datMeta$Group)
datMeta$Group = as.factor(paste(datMeta$Genotype, "_", datMeta$Treatment,sep=""))
table(datMeta$Group)
datMeta$Genotype = "Het"
datMeta$Genotype[datMeta$Subject %in% c(442,466,469)] = "WT"
datMeta$Treatment = "PolyIC"
datMeta$Treatment[datMeta$Subject %in% c(420, 455, 447)] = "Saline"
datMeta$Group = as.factor(paste(datMeta$Genotype, "_", datMeta$Treatment,sep=""))
table(datMeta$Group)
